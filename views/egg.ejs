<!doctype html>
<html lang="en">
<head>
	<title>THE EASTER EGG</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
  <link rel='stylesheet' href='/stylesheets/style.css' />
</head>
<body>
	<script src="/threejs/three.min.js"></script>
	<script src="/threejs/Detector.js"></script>
	<script src="/threejs/Stats.js"></script>
	<script src="/threejs/OrbitControls.js"></script>
	<script src="/threejs/THREEx.KeyboardState.js"></script>
	<script src="/threejs/THREEx.FullScreen.js"></script>
	<script src="/threejs/THREEx.WindowResize.js"></script>
	<script src="/threejs/EffectComposer.js"></script>
	<script src="/threejs/SubdivisionModifier.js"></script>

	<script src="/threejs/postprocessing/EffectComposer.js"></script>
	<script src="/threejs/postprocessing/RenderPass.js"></script>
	<script src="/threejs/postprocessing/MaskPass.js"></script>
	<script src="/threejs/postprocessing/ShaderPass.js"></script>
	<script src="/threejs/shaders/CopyShader.js"></script>
	<script src="/threejs/shaders/FXAAShader.js"></script>
	<script src="/threejs/shaders/ConvolutionShader.js"></script>
	<script src="/threejs/shaders/LuminosityHighPassShader.js"></script>
	<script src="/threejs/postprocessing/UnrealBloomPass.js"></script>
	<script src="/threejs/GPUParticleSystem.js"></script>

	<script src="/threejs/shaders/ConvolutionShader.js"></script>
	<script src="/threejs/shaders/CopyShader.js"></script>
	<script src="/threejs/shaders/FilmShader.js"></script>

	<script src="/threejs/postprocessing/EffectComposer.js"></script>
	<script src="/threejs/postprocessing/ShaderPass.js"></script>
	<script src="/threejs/postprocessing/MaskPass.js"></script>
	<script src="/threejs/postprocessing/RenderPass.js"></script>
	<script src="/threejs/postprocessing/BloomPass.js"></script>
	<script src="/threejs/postprocessing/FilmPass.js"></script>

	<script src="/threejs/Detector.js"></script>

	<script id="glowVertexShader" type="x-shader/x-vertex">
	uniform vec3 viewVector;
	uniform float c;
	uniform float p;
	varying float intensity;
	void main() 
	{
	    vec3 vNormal = normalize( normalMatrix * normal );
		vec3 vNormel = normalize( normalMatrix * viewVector );
		intensity = pow( c - dot(vNormal, vNormel), p );
		
	    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
	}
	</script>

	<!-- fragment shader a.k.a. pixel shader -->
	<script id="glowFragmentShader" type="x-shader/x-vertex"> 
	uniform vec3 glowColor;
	varying float intensity;
	void main() 
	{
		vec3 glow = glowColor * intensity;
	    gl_FragColor = vec4( glow, 1.0 );
	}
	</script>

	<script id="fragmentShader" type="x-shader/x-fragment">
			uniform float time;
			uniform float fogDensity;
			uniform vec3 fogColor;
			uniform sampler2D texture1;
			uniform sampler2D texture2;
			varying vec2 vUv;
			void main( ) {
				vec2 position = - 1.0 + 2.0 * vUv;
				vec4 noise = texture2D( texture1, vUv );
				vec2 T1 = vUv + vec2( 1.5, - 1.5 ) * time * 0.02;
				vec2 T2 = vUv + vec2( - 0.5, 2.0 ) * time * 0.01;
				T1.x += noise.x * 2.0;
				T1.y += noise.y * 2.0;
				T2.x -= noise.y * 0.2;
				T2.y += noise.z * 0.2;
				float p = texture2D( texture1, T1 * 2.0 ).a;
				vec4 color = texture2D( texture2, T2 * 2.0 );
				vec4 temp = color * ( vec4( p, p, p, p ) * 2.0 ) + ( color * color - 0.1 );
				if( temp.r > 1.0 ) { temp.bg += clamp( temp.r - 2.0, 0.0, 100.0 ); }
				if( temp.g > 1.0 ) { temp.rb += temp.g - 1.0; }
				if( temp.b > 1.0 ) { temp.rg += temp.b - 1.0; }
				gl_FragColor = temp;
				float depth = gl_FragCoord.z / gl_FragCoord.w;
				const float LOG2 = 1.442695;
				float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );
				fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );
				gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );
			}
	</script>

	<script id="vertexShader" type="x-shader/x-vertex">
			uniform vec2 uvScale;
			varying vec2 vUv;
			void main()
			{
				vUv = uvScale * uv;
				vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
				gl_Position = projectionMatrix * mvPosition;
			}
	</script>

	<div id="ThreeJS" style="position: absolute; left:0px; top:0px"></div>

    <script src="/javascripts/egg.js"></script>
</body>
</html>
